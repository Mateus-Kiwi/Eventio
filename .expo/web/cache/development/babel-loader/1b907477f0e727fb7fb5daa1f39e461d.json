{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport auth from '@react-native-firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      initializing = _useState2[0],\n      setInitializing = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    var subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n\n  if (!user) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Login\"\n      })\n    });\n  }\n\n  return _jsx(View, {\n    children: _jsxs(Text, {\n      children: [\"Welcome \", user.email]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","auth","App","initializing","setInitializing","user","setUser","onAuthStateChanged","subscriber","email"],"sources":["E:/Code/Curso/Eventio/src/Navigation/screens/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport auth from '@react-native-firebase/auth';\r\n\r\nfunction App() {\r\n  // Set an initializing state whilst Firebase connects\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  // Handle user state changes\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber; // unsubscribe on unmount\r\n  }, []);\r\n\r\n  if (initializing) return null;\r\n\r\n  if (!user) {\r\n    return (\r\n      <View>\r\n        <Text>Login</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <Text>Welcome {user.email}</Text>\r\n    </View>\r\n  );\r\n}\r\n \r\n  "],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;;;;AAEA,SAASC,GAAT,GAAe;EAEb,gBAAwCH,QAAQ,CAAC,IAAD,CAAhD;EAAA;EAAA,IAAOI,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAAwBL,QAAQ,EAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EAGA,SAASC,kBAAT,CAA4BF,IAA5B,EAAkC;IAChCC,OAAO,CAACD,IAAD,CAAP;IACA,IAAIF,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;EACnB;;EAEDJ,SAAS,CAAC,YAAM;IACd,IAAMQ,UAAU,GAAGP,IAAI,GAAGM,kBAAP,CAA0BA,kBAA1B,CAAnB;IACA,OAAOC,UAAP;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,IAAIL,YAAJ,EAAkB,OAAO,IAAP;;EAElB,IAAI,CAACE,IAAL,EAAW;IACT,OACE,KAAC,IAAD;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EADF;EAKD;;EAED,OACE,KAAC,IAAD;IAAA,UACE,MAAC,IAAD;MAAA,uBAAeA,IAAI,CAACI,KAApB;IAAA;EADF,EADF;AAKD"},"metadata":{},"sourceType":"module"}