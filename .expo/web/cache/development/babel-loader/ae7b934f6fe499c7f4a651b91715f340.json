{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isObject, isString, isUndefined, isBoolean } from '@react-native-firebase/app/lib/common';\n\nvar User = function () {\n  function User(auth, user) {\n    _classCallCheck(this, User);\n\n    this._auth = auth;\n    this._user = user;\n  }\n\n  _createClass(User, [{\n    key: \"displayName\",\n    get: function get() {\n      return this._user.displayName || null;\n    }\n  }, {\n    key: \"email\",\n    get: function get() {\n      return this._user.email || null;\n    }\n  }, {\n    key: \"emailVerified\",\n    get: function get() {\n      return this._user.emailVerified || false;\n    }\n  }, {\n    key: \"isAnonymous\",\n    get: function get() {\n      return this._user.isAnonymous || false;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      var metadata = this._user.metadata;\n      return {\n        lastSignInTime: new Date(metadata.lastSignInTime).toISOString(),\n        creationTime: new Date(metadata.creationTime).toISOString()\n      };\n    }\n  }, {\n    key: \"phoneNumber\",\n    get: function get() {\n      return this._user.phoneNumber || null;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this._user.tenantId || null;\n    }\n  }, {\n    key: \"photoURL\",\n    get: function get() {\n      return this._user.photoURL || null;\n    }\n  }, {\n    key: \"providerData\",\n    get: function get() {\n      return this._user.providerData;\n    }\n  }, {\n    key: \"providerId\",\n    get: function get() {\n      return this._user.providerId;\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return this._user.uid;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      var _this = this;\n\n      return this._auth.native.delete().then(function () {\n        _this._auth._setUser();\n      });\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      var forceRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this._auth.native.getIdToken(forceRefresh);\n    }\n  }, {\n    key: \"getIdTokenResult\",\n    value: function getIdTokenResult() {\n      var forceRefresh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this._auth.native.getIdTokenResult(forceRefresh);\n    }\n  }, {\n    key: \"linkWithCredential\",\n    value: function linkWithCredential(credential) {\n      var _this2 = this;\n\n      return this._auth.native.linkWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this2._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"reauthenticateWithCredential\",\n    value: function reauthenticateWithCredential(credential) {\n      var _this3 = this;\n\n      return this._auth.native.reauthenticateWithCredential(credential.providerId, credential.token, credential.secret).then(function (userCredential) {\n        return _this3._auth._setUserCredential(userCredential);\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this4 = this;\n\n      return this._auth.native.reload().then(function (user) {\n        _this4._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"sendEmailVerification\",\n    value: function sendEmailVerification(actionCodeSettings) {\n      var _this5 = this;\n\n      if (isObject(actionCodeSettings)) {\n        if (!isString(actionCodeSettings.url)) {\n          throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.url' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.dynamicLinkDomain) && !isString(actionCodeSettings.dynamicLinkDomain)) {\n          throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.handleCodeInApp) && !isBoolean(actionCodeSettings.handleCodeInApp)) {\n          throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.iOS)) {\n          if (!isObject(actionCodeSettings.iOS)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.iOS.bundleId)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS.bundleId' expected a string value.\");\n          }\n        }\n\n        if (!isUndefined(actionCodeSettings.android)) {\n          if (!isObject(actionCodeSettings.android)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.android.packageName)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.packageName' expected a string value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.installApp) && !isBoolean(actionCodeSettings.android.installApp)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.installApp' expected a boolean value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.minimumVersion) && !isString(actionCodeSettings.android.minimumVersion)) {\n            throw new Error(\"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.minimumVersion' expected a string value.\");\n          }\n        }\n      }\n\n      return this._auth.native.sendEmailVerification(actionCodeSettings).then(function (user) {\n        _this5._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return Object.assign({}, this._user);\n    }\n  }, {\n    key: \"unlink\",\n    value: function unlink(providerId) {\n      var _this6 = this;\n\n      return this._auth.native.unlink(providerId).then(function (user) {\n        return _this6._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(email) {\n      var _this7 = this;\n\n      return this._auth.native.updateEmail(email).then(function (user) {\n        _this7._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(password) {\n      var _this8 = this;\n\n      return this._auth.native.updatePassword(password).then(function (user) {\n        _this8._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updatePhoneNumber\",\n    value: function updatePhoneNumber(credential) {\n      var _this9 = this;\n\n      return this._auth.native.updatePhoneNumber(credential.providerId, credential.token, credential.secret).then(function (user) {\n        _this9._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"updateProfile\",\n    value: function updateProfile(updates) {\n      var _this10 = this;\n\n      return this._auth.native.updateProfile(updates).then(function (user) {\n        _this10._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"verifyBeforeUpdateEmail\",\n    value: function verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n      var _this11 = this;\n\n      if (!isString(newEmail)) {\n        throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(*) 'newEmail' expected a string value.\");\n      }\n\n      if (isObject(actionCodeSettings)) {\n        if (!isString(actionCodeSettings.url)) {\n          throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.url' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.dynamicLinkDomain) && !isString(actionCodeSettings.dynamicLinkDomain)) {\n          throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.handleCodeInApp) && !isBoolean(actionCodeSettings.handleCodeInApp)) {\n          throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\");\n        }\n\n        if (!isUndefined(actionCodeSettings.iOS)) {\n          if (!isObject(actionCodeSettings.iOS)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.iOS.bundleId)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS.bundleId' expected a string value.\");\n          }\n        }\n\n        if (!isUndefined(actionCodeSettings.android)) {\n          if (!isObject(actionCodeSettings.android)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android' expected an object value.\");\n          }\n\n          if (!isString(actionCodeSettings.android.packageName)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.packageName' expected a string value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.installApp) && !isBoolean(actionCodeSettings.android.installApp)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.installApp' expected a boolean value.\");\n          }\n\n          if (!isUndefined(actionCodeSettings.android.minimumVersion) && !isString(actionCodeSettings.android.minimumVersion)) {\n            throw new Error(\"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.minimumVersion' expected a string value.\");\n          }\n        }\n      }\n\n      return this._auth.native.verifyBeforeUpdateEmail(newEmail, actionCodeSettings).then(function (user) {\n        _this11._auth._setUser(user);\n      });\n    }\n  }, {\n    key: \"linkWithPhoneNumber\",\n    value: function linkWithPhoneNumber() {\n      throw new Error('firebase.auth.User.linkWithPhoneNumber() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"linkWithPopup\",\n    value: function linkWithPopup() {\n      throw new Error('firebase.auth.User.linkWithPopup() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"linkWithRedirect\",\n    value: function linkWithRedirect() {\n      throw new Error('firebase.auth.User.linkWithRedirect() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"reauthenticateWithPhoneNumber\",\n    value: function reauthenticateWithPhoneNumber() {\n      throw new Error('firebase.auth.User.reauthenticateWithPhoneNumber() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"reauthenticateWithPopup\",\n    value: function reauthenticateWithPopup() {\n      throw new Error('firebase.auth.User.reauthenticateWithPopup() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"reauthenticateWithRedirect\",\n    value: function reauthenticateWithRedirect() {\n      throw new Error('firebase.auth.User.reauthenticateWithRedirect() is unsupported by the native Firebase SDKs.');\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      throw new Error('firebase.auth.User.refreshToken is unsupported by the native Firebase SDKs.');\n    }\n  }]);\n\n  return User;\n}();\n\nexport { User as default };","map":{"version":3,"names":["isObject","isString","isUndefined","isBoolean","User","auth","user","_auth","_user","displayName","email","emailVerified","isAnonymous","metadata","lastSignInTime","Date","toISOString","creationTime","phoneNumber","tenantId","photoURL","providerData","providerId","uid","native","delete","then","_setUser","forceRefresh","getIdToken","getIdTokenResult","credential","linkWithCredential","token","secret","userCredential","_setUserCredential","reauthenticateWithCredential","reload","actionCodeSettings","url","Error","dynamicLinkDomain","handleCodeInApp","iOS","bundleId","android","packageName","installApp","minimumVersion","sendEmailVerification","Object","assign","unlink","updateEmail","password","updatePassword","updatePhoneNumber","updates","updateProfile","newEmail","verifyBeforeUpdateEmail"],"sources":["E:/Code/Curso/Eventio/node_modules/@react-native-firebase/auth/lib/User.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isObject, isString, isUndefined, isBoolean } from '@react-native-firebase/app/lib/common';\n\nexport default class User {\n  constructor(auth, user) {\n    this._auth = auth;\n    this._user = user;\n  }\n\n  get displayName() {\n    return this._user.displayName || null;\n  }\n\n  get email() {\n    return this._user.email || null;\n  }\n\n  get emailVerified() {\n    return this._user.emailVerified || false;\n  }\n\n  get isAnonymous() {\n    return this._user.isAnonymous || false;\n  }\n\n  get metadata() {\n    const { metadata } = this._user;\n\n    return {\n      lastSignInTime: new Date(metadata.lastSignInTime).toISOString(),\n      creationTime: new Date(metadata.creationTime).toISOString(),\n    };\n  }\n\n  get phoneNumber() {\n    return this._user.phoneNumber || null;\n  }\n\n  get tenantId() {\n    return this._user.tenantId || null;\n  }\n\n  get photoURL() {\n    return this._user.photoURL || null;\n  }\n\n  get providerData() {\n    return this._user.providerData;\n  }\n\n  get providerId() {\n    return this._user.providerId;\n  }\n\n  get uid() {\n    return this._user.uid;\n  }\n\n  delete() {\n    return this._auth.native.delete().then(() => {\n      this._auth._setUser();\n    });\n  }\n\n  getIdToken(forceRefresh = false) {\n    return this._auth.native.getIdToken(forceRefresh);\n  }\n\n  getIdTokenResult(forceRefresh = false) {\n    return this._auth.native.getIdTokenResult(forceRefresh);\n  }\n\n  linkWithCredential(credential) {\n    return this._auth.native\n      .linkWithCredential(credential.providerId, credential.token, credential.secret)\n      .then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n\n  reauthenticateWithCredential(credential) {\n    return this._auth.native\n      .reauthenticateWithCredential(credential.providerId, credential.token, credential.secret)\n      .then(userCredential => this._auth._setUserCredential(userCredential));\n  }\n\n  reload() {\n    return this._auth.native.reload().then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  sendEmailVerification(actionCodeSettings) {\n    if (isObject(actionCodeSettings)) {\n      if (!isString(actionCodeSettings.url)) {\n        throw new Error(\n          \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.url' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.dynamicLinkDomain) &&\n        !isString(actionCodeSettings.dynamicLinkDomain)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.handleCodeInApp) &&\n        !isBoolean(actionCodeSettings.handleCodeInApp)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\",\n        );\n      }\n\n      if (!isUndefined(actionCodeSettings.iOS)) {\n        if (!isObject(actionCodeSettings.iOS)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.iOS.bundleId)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.iOS.bundleId' expected a string value.\",\n          );\n        }\n      }\n\n      if (!isUndefined(actionCodeSettings.android)) {\n        if (!isObject(actionCodeSettings.android)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.android.packageName)) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.packageName' expected a string value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.installApp) &&\n          !isBoolean(actionCodeSettings.android.installApp)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.installApp' expected a boolean value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.minimumVersion) &&\n          !isString(actionCodeSettings.android.minimumVersion)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.sendEmailVerification(*) 'actionCodeSettings.android.minimumVersion' expected a string value.\",\n          );\n        }\n      }\n    }\n\n    return this._auth.native.sendEmailVerification(actionCodeSettings).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  toJSON() {\n    return Object.assign({}, this._user);\n  }\n\n  unlink(providerId) {\n    return this._auth.native.unlink(providerId).then(user => this._auth._setUser(user));\n  }\n\n  updateEmail(email) {\n    return this._auth.native.updateEmail(email).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  updatePassword(password) {\n    return this._auth.native.updatePassword(password).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  updatePhoneNumber(credential) {\n    return this._auth.native\n      .updatePhoneNumber(credential.providerId, credential.token, credential.secret)\n      .then(user => {\n        this._auth._setUser(user);\n      });\n  }\n\n  updateProfile(updates) {\n    return this._auth.native.updateProfile(updates).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\n    if (!isString(newEmail)) {\n      throw new Error(\n        \"firebase.auth.User.verifyBeforeUpdateEmail(*) 'newEmail' expected a string value.\",\n      );\n    }\n\n    if (isObject(actionCodeSettings)) {\n      if (!isString(actionCodeSettings.url)) {\n        throw new Error(\n          \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.url' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.dynamicLinkDomain) &&\n        !isString(actionCodeSettings.dynamicLinkDomain)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.dynamicLinkDomain' expected a string value.\",\n        );\n      }\n\n      if (\n        !isUndefined(actionCodeSettings.handleCodeInApp) &&\n        !isBoolean(actionCodeSettings.handleCodeInApp)\n      ) {\n        throw new Error(\n          \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.handleCodeInApp' expected a boolean value.\",\n        );\n      }\n\n      if (!isUndefined(actionCodeSettings.iOS)) {\n        if (!isObject(actionCodeSettings.iOS)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.iOS.bundleId)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.iOS.bundleId' expected a string value.\",\n          );\n        }\n      }\n\n      if (!isUndefined(actionCodeSettings.android)) {\n        if (!isObject(actionCodeSettings.android)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android' expected an object value.\",\n          );\n        }\n        if (!isString(actionCodeSettings.android.packageName)) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.packageName' expected a string value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.installApp) &&\n          !isBoolean(actionCodeSettings.android.installApp)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.installApp' expected a boolean value.\",\n          );\n        }\n\n        if (\n          !isUndefined(actionCodeSettings.android.minimumVersion) &&\n          !isString(actionCodeSettings.android.minimumVersion)\n        ) {\n          throw new Error(\n            \"firebase.auth.User.verifyBeforeUpdateEmail(_, *) 'actionCodeSettings.android.minimumVersion' expected a string value.\",\n          );\n        }\n      }\n    }\n\n    return this._auth.native.verifyBeforeUpdateEmail(newEmail, actionCodeSettings).then(user => {\n      this._auth._setUser(user);\n    });\n  }\n\n  /**\n   * KNOWN UNSUPPORTED METHODS\n   */\n\n  linkWithPhoneNumber() {\n    throw new Error(\n      'firebase.auth.User.linkWithPhoneNumber() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  linkWithPopup() {\n    throw new Error(\n      'firebase.auth.User.linkWithPopup() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  linkWithRedirect() {\n    throw new Error(\n      'firebase.auth.User.linkWithRedirect() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  reauthenticateWithPhoneNumber() {\n    throw new Error(\n      'firebase.auth.User.reauthenticateWithPhoneNumber() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  reauthenticateWithPopup() {\n    throw new Error(\n      'firebase.auth.User.reauthenticateWithPopup() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  reauthenticateWithRedirect() {\n    throw new Error(\n      'firebase.auth.User.reauthenticateWithRedirect() is unsupported by the native Firebase SDKs.',\n    );\n  }\n\n  get refreshToken() {\n    throw new Error('firebase.auth.User.refreshToken is unsupported by the native Firebase SDKs.');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}