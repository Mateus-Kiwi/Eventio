{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"styleInterpolator\",\"interpolationIndex\",\"current\",\"gesture\",\"next\",\"layout\",\"insets\",\"overlay\",\"overlayEnabled\",\"shadowEnabled\",\"gestureEnabled\",\"gestureDirection\",\"pageOverflowEnabled\",\"headerDarkContent\",\"children\",\"containerStyle\",\"contentStyle\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{forModalPresentationIOS}from\"../../TransitionConfigs/CardStyleInterpolators\";import CardAnimationContext from\"../../utils/CardAnimationContext\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";import getInvertedMultiplier from\"../../utils/getInvertedMultiplier\";import memoize from\"../../utils/memoize\";import{GestureState,PanGestureHandler}from\"../GestureHandler\";import ModalStatusBarManager from\"../ModalStatusBarManager\";import CardSheet from\"./CardSheet\";var GESTURE_VELOCITY_IMPACT=0.3;var TRUE=1;var FALSE=0;var GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;var GESTURE_RESPONSE_DISTANCE_VERTICAL=135;var useNativeDriver=Platform.OS!=='web';var hasOpacityStyle=function hasOpacityStyle(style){if(style){var flattenedStyle=StyleSheet.flatten(style);return flattenedStyle.opacity!=null;}return false;};var Card=function(_React$Component){_inherits(Card,_React$Component);var _super=_createSuper(Card);function Card(){var _this;_classCallCheck(this,Card);_this=_super.apply(this,arguments);_defineProperty(_assertThisInitialized(_this),\"isCurrentlyMounted\",false);_defineProperty(_assertThisInitialized(_this),\"isClosing\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"inverted\",new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));_defineProperty(_assertThisInitialized(_this),\"layout\",{width:new Animated.Value(_this.props.layout.width),height:new Animated.Value(_this.props.layout.height)});_defineProperty(_assertThisInitialized(_this),\"isSwiping\",new Animated.Value(FALSE));_defineProperty(_assertThisInitialized(_this),\"interactionHandle\",void 0);_defineProperty(_assertThisInitialized(_this),\"pendingGestureCallback\",void 0);_defineProperty(_assertThisInitialized(_this),\"lastToValue\",void 0);_defineProperty(_assertThisInitialized(_this),\"animate\",function(_ref){var closing=_ref.closing,velocity=_ref.velocity;var _this$props=_this.props,gesture=_this$props.gesture,transitionSpec=_this$props.transitionSpec,onOpen=_this$props.onOpen,onClose=_this$props.onClose,onTransition=_this$props.onTransition;var toValue=_this.getAnimateToValue(_objectSpread(_objectSpread({},_this.props),{},{closing:closing}));_this.lastToValue=toValue;_this.isClosing.setValue(closing?TRUE:FALSE);var spec=closing?transitionSpec.close:transitionSpec.open;var animation=spec.animation==='spring'?Animated.spring:Animated.timing;_this.setPointerEventsEnabled(!closing);_this.handleStartInteraction();clearTimeout(_this.pendingGestureCallback);onTransition===null||onTransition===void 0?void 0:onTransition({closing:closing,gesture:velocity!==undefined});animation(gesture,_objectSpread(_objectSpread({},spec.config),{},{velocity:velocity,toValue:toValue,useNativeDriver:useNativeDriver,isInteraction:false})).start(function(_ref2){var finished=_ref2.finished;_this.handleEndInteraction();clearTimeout(_this.pendingGestureCallback);if(finished){if(closing){onClose();}else{onOpen();}if(_this.isCurrentlyMounted){_this.forceUpdate();}}});});_defineProperty(_assertThisInitialized(_this),\"getAnimateToValue\",function(_ref3){var closing=_ref3.closing,layout=_ref3.layout,gestureDirection=_ref3.gestureDirection;if(!closing){return 0;}return getDistanceForDirection(layout,gestureDirection);});_defineProperty(_assertThisInitialized(_this),\"setPointerEventsEnabled\",function(enabled){var _this$contentRef$curr;var pointerEvents=enabled?'box-none':'none';(_this$contentRef$curr=_this.contentRef.current)===null||_this$contentRef$curr===void 0?void 0:_this$contentRef$curr.setNativeProps({pointerEvents:pointerEvents});});_defineProperty(_assertThisInitialized(_this),\"handleStartInteraction\",function(){if(_this.interactionHandle===undefined){_this.interactionHandle=InteractionManager.createInteractionHandle();}});_defineProperty(_assertThisInitialized(_this),\"handleEndInteraction\",function(){if(_this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(_this.interactionHandle);_this.interactionHandle=undefined;}});_defineProperty(_assertThisInitialized(_this),\"handleGestureStateChange\",function(_ref4){var nativeEvent=_ref4.nativeEvent;var _this$props2=_this.props,layout=_this$props2.layout,onClose=_this$props2.onClose,onGestureBegin=_this$props2.onGestureBegin,onGestureCanceled=_this$props2.onGestureCanceled,onGestureEnd=_this$props2.onGestureEnd,gestureDirection=_this$props2.gestureDirection,gestureVelocityImpact=_this$props2.gestureVelocityImpact;switch(nativeEvent.state){case GestureState.ACTIVE:_this.isSwiping.setValue(TRUE);_this.handleStartInteraction();onGestureBegin===null||onGestureBegin===void 0?void 0:onGestureBegin();break;case GestureState.CANCELLED:{_this.isSwiping.setValue(FALSE);_this.handleEndInteraction();var velocity=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?nativeEvent.velocityY:nativeEvent.velocityX;_this.animate({closing:_this.props.closing,velocity:velocity});onGestureCanceled===null||onGestureCanceled===void 0?void 0:onGestureCanceled();break;}case GestureState.END:{_this.isSwiping.setValue(FALSE);var distance;var translation;var _velocity;if(gestureDirection==='vertical'||gestureDirection==='vertical-inverted'){distance=layout.height;translation=nativeEvent.translationY;_velocity=nativeEvent.velocityY;}else{distance=layout.width;translation=nativeEvent.translationX;_velocity=nativeEvent.velocityX;}var closing=(translation+_velocity*gestureVelocityImpact)*getInvertedMultiplier(gestureDirection)>distance/2?_velocity!==0||translation!==0:_this.props.closing;_this.animate({closing:closing,velocity:_velocity});if(closing){_this.pendingGestureCallback=setTimeout(function(){onClose();_this.forceUpdate();},32);}onGestureEnd===null||onGestureEnd===void 0?void 0:onGestureEnd();break;}}});_defineProperty(_assertThisInitialized(_this),\"getInterpolatedStyle\",memoize(function(styleInterpolator,animation){return styleInterpolator(animation);}));_defineProperty(_assertThisInitialized(_this),\"getCardAnimation\",memoize(function(interpolationIndex,current,next,layout,insetTop,insetRight,insetBottom,insetLeft){return{index:interpolationIndex,current:{progress:current},next:next&&{progress:next},closing:_this.isClosing,swiping:_this.isSwiping,inverted:_this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}};}));_defineProperty(_assertThisInitialized(_this),\"contentRef\",React.createRef());return _this;}_createClass(Card,[{key:\"componentDidMount\",value:function componentDidMount(){this.animate({closing:this.props.closing});this.isCurrentlyMounted=true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props3=this.props,layout=_this$props3.layout,gestureDirection=_this$props3.gestureDirection,closing=_this$props3.closing;var width=layout.width,height=layout.height;if(width!==prevProps.layout.width){this.layout.width.setValue(width);}if(height!==prevProps.layout.height){this.layout.height.setValue(height);}if(gestureDirection!==prevProps.gestureDirection){this.inverted.setValue(getInvertedMultiplier(gestureDirection));}var toValue=this.getAnimateToValue(this.props);if(this.getAnimateToValue(prevProps)!==toValue||this.lastToValue!==toValue){this.animate({closing:closing});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.gesture.stopAnimation();this.isCurrentlyMounted=false;this.handleEndInteraction();}},{key:\"gestureActivationCriteria\",value:function gestureActivationCriteria(){var _this$props4=this.props,layout=_this$props4.layout,gestureDirection=_this$props4.gestureDirection,gestureResponseDistance=_this$props4.gestureResponseDistance;var enableTrackpadTwoFingerGesture=true;var distance=gestureResponseDistance!==undefined?gestureResponseDistance:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?GESTURE_RESPONSE_DISTANCE_VERTICAL:GESTURE_RESPONSE_DISTANCE_HORIZONTAL;if(gestureDirection==='vertical'){return{maxDeltaX:15,minOffsetY:5,hitSlop:{bottom:-layout.height+distance},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else if(gestureDirection==='vertical-inverted'){return{maxDeltaX:15,minOffsetY:-5,hitSlop:{top:-layout.height+distance},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else{var hitSlop=-layout.width+distance;var invertedMultiplier=getInvertedMultiplier(gestureDirection);if(invertedMultiplier===1){return{minOffsetX:5,maxDeltaY:20,hitSlop:{right:hitSlop},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}else{return{minOffsetX:-5,maxDeltaY:20,hitSlop:{left:hitSlop},enableTrackpadTwoFingerGesture:enableTrackpadTwoFingerGesture};}}}},{key:\"render\",value:function render(){var _this$props5=this.props,styleInterpolator=_this$props5.styleInterpolator,interpolationIndex=_this$props5.interpolationIndex,current=_this$props5.current,gesture=_this$props5.gesture,next=_this$props5.next,layout=_this$props5.layout,insets=_this$props5.insets,overlay=_this$props5.overlay,overlayEnabled=_this$props5.overlayEnabled,shadowEnabled=_this$props5.shadowEnabled,gestureEnabled=_this$props5.gestureEnabled,gestureDirection=_this$props5.gestureDirection,pageOverflowEnabled=_this$props5.pageOverflowEnabled,headerDarkContent=_this$props5.headerDarkContent,children=_this$props5.children,customContainerStyle=_this$props5.containerStyle,contentStyle=_this$props5.contentStyle,rest=_objectWithoutProperties(_this$props5,_excluded);var interpolationProps=this.getCardAnimation(interpolationIndex,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);var interpolatedStyle=this.getInterpolatedStyle(styleInterpolator,interpolationProps);var containerStyle=interpolatedStyle.containerStyle,cardStyle=interpolatedStyle.cardStyle,overlayStyle=interpolatedStyle.overlayStyle,shadowStyle=interpolatedStyle.shadowStyle;var handleGestureEvent=gestureEnabled?Animated.event([{nativeEvent:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?{translationY:gesture}:{translationX:gesture}}],{useNativeDriver:useNativeDriver}):undefined;var _StyleSheet$flatten=StyleSheet.flatten(contentStyle||{}),backgroundColor=_StyleSheet$flatten.backgroundColor;var isTransparent=typeof backgroundColor==='string'?Color(backgroundColor).alpha()===0:false;return React.createElement(CardAnimationContext.Provider,{value:interpolationProps},Platform.OS==='ios'&&overlayEnabled&&next&&getIsModalPresentation(styleInterpolator)?React.createElement(ModalStatusBarManager,{dark:headerDarkContent,layout:layout,insets:insets,style:cardStyle}):null,React.createElement(Animated.View,{style:{opacity:current},collapsable:false}),React.createElement(View,_extends({pointerEvents:\"box-none\"},rest),overlayEnabled?React.createElement(View,{pointerEvents:\"box-none\",style:StyleSheet.absoluteFill},overlay({style:overlayStyle})):null,React.createElement(Animated.View,{style:[styles.container,containerStyle,customContainerStyle],pointerEvents:\"box-none\"},React.createElement(PanGestureHandler,_extends({enabled:layout.width!==0&&gestureEnabled,onGestureEvent:handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange},this.gestureActivationCriteria()),React.createElement(Animated.View,{needsOffscreenAlphaCompositing:hasOpacityStyle(cardStyle),style:[styles.container,cardStyle]},shadowEnabled&&shadowStyle&&!isTransparent?React.createElement(Animated.View,{style:[styles.shadow,gestureDirection==='horizontal'?[styles.shadowHorizontal,styles.shadowLeft]:gestureDirection==='horizontal-inverted'?[styles.shadowHorizontal,styles.shadowRight]:gestureDirection==='vertical'?[styles.shadowVertical,styles.shadowTop]:[styles.shadowVertical,styles.shadowBottom],{backgroundColor:backgroundColor},shadowStyle],pointerEvents:\"none\"}):null,React.createElement(CardSheet,{ref:this.contentRef,enabled:pageOverflowEnabled,layout:layout,style:contentStyle},children))))));}}]);return Card;}(React.Component);export{Card as default};_defineProperty(Card,\"defaultProps\",{shadowEnabled:false,gestureEnabled:true,gestureVelocityImpact:GESTURE_VELOCITY_IMPACT,overlay:function overlay(_ref5){var style=_ref5.style;return style?React.createElement(Animated.View,{pointerEvents:\"none\",style:[styles.overlay,style]}):null;}});export var getIsModalPresentation=function getIsModalPresentation(cardStyleInterpolator){return cardStyleInterpolator===forModalPresentationIOS||cardStyleInterpolator.name==='forModalPresentationIOS';};var styles=StyleSheet.create({container:{flex:1},overlay:{flex:1,backgroundColor:'#000'},shadow:{position:'absolute',shadowRadius:5,shadowColor:'#000',shadowOpacity:0.3},shadowHorizontal:{top:0,bottom:0,width:3,shadowOffset:{width:-1,height:1}},shadowLeft:{left:0},shadowRight:{right:0},shadowVertical:{left:0,right:0,height:3,shadowOffset:{width:1,height:-1}},shadowTop:{top:0},shadowBottom:{bottom:0}});","map":{"version":3,"mappings":"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","names":["Color","React","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","Animated","Value","props","gestureDirection","width","layout","height","closing","velocity","gesture","transitionSpec","onOpen","onClose","onTransition","toValue","getAnimateToValue","lastToValue","isClosing","setValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","enabled","pointerEvents","contentRef","current","setNativeProps","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","stopAnimation","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","headerDarkContent","children","customContainerStyle","containerStyle","contentStyle","rest","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","Provider","value","getIsModalPresentation","dark","View","collapsable","absoluteFill","styles","container","onGestureEvent","onHandlerStateChange","handleGestureStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","ref","Component","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["Card.tsx"],"sourcesContent":["import Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  headerDarkContent: boolean | undefined;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { gesture, transitionSpec, onOpen, onClose, onTransition } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        {\n          // StatusBar messes with translucent status bar on Android\n          // So we should only enable it on iOS\n          Platform.OS === 'ios' &&\n          overlayEnabled &&\n          next &&\n          getIsModalPresentation(styleInterpolator) ? (\n            <ModalStatusBarManager\n              dark={headerDarkContent}\n              layout={layout}\n              insets={insets}\n              style={cardStyle}\n            />\n          ) : null\n        }\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nexport const getIsModalPresentation = (\n  cardStyleInterpolator: StackCardStyleInterpolator\n) => {\n  return (\n    cardStyleInterpolator === forModalPresentationIOS ||\n    // Handle custom modal presentation interpolators as well\n    cardStyleInterpolator.name === 'forModalPresentationIOS'\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}