{"ast":null,"code":"export default function memoize(callback){var previous;var result;return function(){var hasChanged=false;for(var _len=arguments.length,dependencies=new Array(_len),_key=0;_key<_len;_key++){dependencies[_key]=arguments[_key];}if(previous){if(previous.length!==dependencies.length){hasChanged=true;}else{for(var i=0;i<previous.length;i++){if(previous[i]!==dependencies[i]){hasChanged=true;break;}}}}else{hasChanged=true;}previous=dependencies;if(hasChanged||result===undefined){result=callback.apply(void 0,dependencies);}return result;};}","map":{"version":3,"mappings":"AAAA,cAAe,SAASA,QAAT,CACbC,QADa,CAEb,CACA,GAAIC,SAAJ,CACA,GAAIC,OAAJ,CAEA,MAAO,WAAmC,CACxC,GAAIC,WAAU,CAAG,KAAjB,CADwC,8BAA/BC,YAA+B,0CAA/BA,YAA+B,MAA/BA,CAA+BC,eAA/BD,CAA+B,CAGxC,GAAIH,QAAJ,CAAc,CACZ,GAAIA,QAAQ,CAACK,MAATL,GAAoBG,YAAY,CAACE,MAArC,CAA6C,CAC3CH,UAAU,CAAG,IAAbA,CADF,KAEO,CACL,IAAK,GAAII,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGN,QAAQ,CAACK,MAA7B,CAAqCC,CAAC,EAAtC,CAA0C,CACxC,GAAIN,QAAQ,CAACM,CAAD,CAARN,GAAgBG,YAAY,CAACG,CAAD,CAAhC,CAAqC,CACnCJ,UAAU,CAAG,IAAbA,CACA,MACD,CACF,CACF,CAVH,KAWO,CACLA,UAAU,CAAG,IAAbA,CACD,CAEDF,QAAQ,CAAGG,YAAXH,CAEA,GAAIE,UAAU,EAAID,MAAM,GAAKM,SAA7B,CAAwC,CACtCN,MAAM,CAAGF,QAAQ,MAARA,QAAYI,YAAZJ,CAATE,CACD,CAED,MAAOA,OAAP,CAxBF,EA0BD","names":["memoize","callback","previous","result","hasChanged","dependencies","arguments","length","i","undefined"],"sources":["memoize.tsx"],"sourcesContent":["export default function memoize<Result, Deps extends readonly any[]>(\n  callback: (...deps: Deps) => Result\n) {\n  let previous: Deps | undefined;\n  let result: Result | undefined;\n\n  return (...dependencies: Deps): Result => {\n    let hasChanged = false;\n\n    if (previous) {\n      if (previous.length !== dependencies.length) {\n        hasChanged = true;\n      } else {\n        for (let i = 0; i < previous.length; i++) {\n          if (previous[i] !== dependencies[i]) {\n            hasChanged = true;\n            break;\n          }\n        }\n      }\n    } else {\n      hasChanged = true;\n    }\n\n    previous = dependencies;\n\n    if (hasChanged || result === undefined) {\n      result = callback(...dependencies);\n    }\n\n    return result;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}