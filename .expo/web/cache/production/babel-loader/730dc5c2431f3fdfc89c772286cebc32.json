{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"state\",\"descriptors\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{HeaderShownContext,SafeAreaProviderCompat}from'@react-navigation/elements';import{StackActions}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SafeAreaInsetsContext}from'react-native-safe-area-context';import ModalPresentationContext from\"../../utils/ModalPresentationContext\";import{GestureHandlerRootView}from\"../GestureHandler\";import HeaderContainer from\"../Header/HeaderContainer\";import CardStack from\"./CardStack\";var GestureHandlerWrapper=GestureHandlerRootView!==null&&GestureHandlerRootView!==void 0?GestureHandlerRootView:View;var isArrayEqual=function isArrayEqual(a,b){return a.length===b.length&&a.every(function(it,index){return it===b[index];});};var StackView=function(_React$Component){_inherits(StackView,_React$Component);var _super=_createSuper(StackView);function StackView(){var _this;_classCallCheck(this,StackView);_this=_super.apply(this,arguments);_defineProperty(_assertThisInitialized(_this),\"state\",{routes:[],previousRoutes:[],previousDescriptors:{},openingRouteKeys:[],closingRouteKeys:[],replacingRouteKeys:[],descriptors:{}});_defineProperty(_assertThisInitialized(_this),\"getPreviousRoute\",function(_ref){var route=_ref.route;var _this$state=_this.state,closingRouteKeys=_this$state.closingRouteKeys,replacingRouteKeys=_this$state.replacingRouteKeys;var routes=_this.state.routes.filter(function(r){return r.key===route.key||!closingRouteKeys.includes(r.key)&&!replacingRouteKeys.includes(r.key);});var index=routes.findIndex(function(r){return r.key===route.key;});return routes[index-1];});_defineProperty(_assertThisInitialized(_this),\"renderScene\",function(_ref2){var route=_ref2.route;var descriptor=_this.state.descriptors[route.key]||_this.props.descriptors[route.key];if(!descriptor){return null;}return descriptor.render();});_defineProperty(_assertThisInitialized(_this),\"renderHeader\",function(props){return React.createElement(HeaderContainer,props);});_defineProperty(_assertThisInitialized(_this),\"handleOpenRoute\",function(_ref3){var route=_ref3.route;var _this$props=_this.props,state=_this$props.state,navigation=_this$props.navigation;var _this$state2=_this.state,closingRouteKeys=_this$state2.closingRouteKeys,replacingRouteKeys=_this$state2.replacingRouteKeys;if(closingRouteKeys.some(function(key){return key===route.key;})&&replacingRouteKeys.every(function(key){return key!==route.key;})&&state.routeNames.includes(route.name)&&!state.routes.some(function(r){return r.key===route.key;})){navigation.navigate(route);}else{_this.setState(function(state){return{routes:state.replacingRouteKeys.length?state.routes.filter(function(r){return!state.replacingRouteKeys.includes(r.key);}):state.routes,openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;}),replacingRouteKeys:[]};});}});_defineProperty(_assertThisInitialized(_this),\"handleCloseRoute\",function(_ref4){var route=_ref4.route;var _this$props2=_this.props,state=_this$props2.state,navigation=_this$props2.navigation;if(state.routes.some(function(r){return r.key===route.key;})){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.pop()),{},{source:route.key,target:state.key}));}else{_this.setState(function(state){return{routes:state.routes.filter(function(r){return r.key!==route.key;}),openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;})};});}});_defineProperty(_assertThisInitialized(_this),\"handleTransitionStart\",function(_ref5,closing){var route=_ref5.route;return _this.props.navigation.emit({type:'transitionStart',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleTransitionEnd\",function(_ref6,closing){var route=_ref6.route;return _this.props.navigation.emit({type:'transitionEnd',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureStart\",function(_ref7){var route=_ref7.route;_this.props.navigation.emit({type:'gestureStart',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureEnd\",function(_ref8){var route=_ref8.route;_this.props.navigation.emit({type:'gestureEnd',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureCancel\",function(_ref9){var route=_ref9.route;_this.props.navigation.emit({type:'gestureCancel',target:route.key});});return _this;}_createClass(StackView,[{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,state=_this$props3.state,_=_this$props3.descriptors,rest=_objectWithoutProperties(_this$props3,_excluded);var _this$state3=this.state,routes=_this$state3.routes,descriptors=_this$state3.descriptors,openingRouteKeys=_this$state3.openingRouteKeys,closingRouteKeys=_this$state3.closingRouteKeys;return React.createElement(GestureHandlerWrapper,{style:styles.container},React.createElement(SafeAreaProviderCompat,null,React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){return React.createElement(ModalPresentationContext.Consumer,null,function(isParentModal){return React.createElement(HeaderShownContext.Consumer,null,function(isParentHeaderShown){return React.createElement(CardStack,_extends({insets:insets,isParentHeaderShown:isParentHeaderShown,isParentModal:isParentModal,getPreviousRoute:_this2.getPreviousRoute,routes:routes,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,onOpenRoute:_this2.handleOpenRoute,onCloseRoute:_this2.handleCloseRoute,onTransitionStart:_this2.handleTransitionStart,onTransitionEnd:_this2.handleTransitionEnd,renderHeader:_this2.renderHeader,renderScene:_this2.renderScene,state:state,descriptors:descriptors,onGestureStart:_this2.handleGestureStart,onGestureEnd:_this2.handleGestureEnd,onGestureCancel:_this2.handleGestureCancel},rest));});});})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if((props.state.routes===state.previousRoutes||isArrayEqual(props.state.routes.map(function(r){return r.key;}),state.previousRoutes.map(function(r){return r.key;})))&&state.routes.length){var _routes=state.routes;var _previousRoutes=state.previousRoutes;var _descriptors=props.descriptors;var previousDescriptors=state.previousDescriptors;if(props.descriptors!==state.previousDescriptors){_descriptors=state.routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});previousDescriptors=props.descriptors;}if(props.state.routes!==state.previousRoutes){var map=props.state.routes.reduce(function(acc,route){acc[route.key]=route;return acc;},{});_routes=state.routes.map(function(route){return map[route.key]||route;});_previousRoutes=props.state.routes;}return{routes:_routes,previousRoutes:_previousRoutes,descriptors:_descriptors,previousDescriptors:previousDescriptors};}var routes=props.state.index<props.state.routes.length-1?props.state.routes.slice(0,props.state.index+1):props.state.routes;var openingRouteKeys=state.openingRouteKeys,closingRouteKeys=state.closingRouteKeys,replacingRouteKeys=state.replacingRouteKeys,previousRoutes=state.previousRoutes;var previousFocusedRoute=previousRoutes[previousRoutes.length-1];var nextFocusedRoute=routes[routes.length-1];var isAnimationEnabled=function isAnimationEnabled(key){var descriptor=props.descriptors[key]||state.descriptors[key];return descriptor?descriptor.options.animationEnabled!==false:true;};var getAnimationTypeForReplace=function getAnimationTypeForReplace(key){var _descriptor$options$a;var descriptor=props.descriptors[key]||state.descriptors[key];return(_descriptor$options$a=descriptor.options.animationTypeForReplace)!==null&&_descriptor$options$a!==void 0?_descriptor$options$a:'push';};if(previousFocusedRoute&&previousFocusedRoute.key!==nextFocusedRoute.key){if(!previousRoutes.some(function(r){return r.key===nextFocusedRoute.key;})){if(isAnimationEnabled(nextFocusedRoute.key)&&!openingRouteKeys.includes(nextFocusedRoute.key)){openingRouteKeys=[].concat(_toConsumableArray(openingRouteKeys),[nextFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});if(getAnimationTypeForReplace(nextFocusedRoute.key)==='pop'){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}else{replacingRouteKeys=[].concat(_toConsumableArray(replacingRouteKeys),[previousFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=routes.slice();routes.splice(routes.length-1,0,previousFocusedRoute);}}}}else if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){if(isAnimationEnabled(previousFocusedRoute.key)&&!closingRouteKeys.includes(previousFocusedRoute.key)){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}}else{}}else if(replacingRouteKeys.length||closingRouteKeys.length){var _routes2;routes=routes.slice();(_routes2=routes).splice.apply(_routes2,[routes.length-1,0].concat(_toConsumableArray(state.routes.filter(function(_ref10){var key=_ref10.key;return isAnimationEnabled(key)?replacingRouteKeys.includes(key)||closingRouteKeys.includes(key):false;}))));}if(!routes.length){throw new Error('There should always be at least one route in the navigation state.');}var descriptors=routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});return{routes:routes,previousRoutes:props.state.routes,previousDescriptors:props.descriptors,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,replacingRouteKeys:replacingRouteKeys,descriptors:descriptors};}}]);return StackView;}(React.Component);export{StackView as default};var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"mappings":"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","names":["HeaderShownContext","SafeAreaProviderCompat","StackActions","React","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","GestureHandlerWrapper","View","isArrayEqual","a","b","length","every","it","index","StackView","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","route","state","filter","r","key","includes","findIndex","descriptor","props","render","navigation","some","routeNames","name","navigate","setState","dispatch","pop","source","target","closing","emit","type","data","_","rest","style","styles","container","Consumer","insets","isParentModal","isParentHeaderShown","getPreviousRoute","onOpenRoute","handleOpenRoute","onCloseRoute","handleCloseRoute","onTransitionStart","handleTransitionStart","onTransitionEnd","handleTransitionEnd","renderHeader","renderScene","onGestureStart","handleGestureStart","onGestureEnd","handleGestureEnd","onGestureCancel","handleGestureCancel","map","reduce","acc","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","options","animationEnabled","getAnimationTypeForReplace","animationTypeForReplace","splice","Error","Component","StyleSheet","create","flex"],"sources":["StackView.tsx"],"sourcesContent":["import {\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  EdgeInsets,\n  SafeAreaInsetsContext,\n} from 'react-native-safe-area-context';\n\nimport type {\n  StackDescriptorMap,\n  StackNavigationConfig,\n  StackNavigationHelpers,\n} from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport HeaderContainer, {\n  Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport CardStack from './CardStack';\n\ntype Props = StackNavigationConfig & {\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport default class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes,\n    } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some((r) => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderScene = ({ route }: { route: Route<string> }) => {\n    const descriptor =\n      this.state.descriptors[route.key] || this.props.descriptors[route.key];\n\n    if (!descriptor) {\n      return null;\n    }\n\n    return descriptor.render();\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.navigate(route);\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const { routes, descriptors, openingRouteKeys, closingRouteKeys } =\n      this.state;\n\n    return (\n      <GestureHandlerWrapper style={styles.container}>\n        <SafeAreaProviderCompat>\n          <SafeAreaInsetsContext.Consumer>\n            {(insets) => (\n              <ModalPresentationContext.Consumer>\n                {(isParentModal) => (\n                  <HeaderShownContext.Consumer>\n                    {(isParentHeaderShown) => (\n                      <CardStack\n                        insets={insets as EdgeInsets}\n                        isParentHeaderShown={isParentHeaderShown}\n                        isParentModal={isParentModal}\n                        getPreviousRoute={this.getPreviousRoute}\n                        routes={routes}\n                        openingRouteKeys={openingRouteKeys}\n                        closingRouteKeys={closingRouteKeys}\n                        onOpenRoute={this.handleOpenRoute}\n                        onCloseRoute={this.handleCloseRoute}\n                        onTransitionStart={this.handleTransitionStart}\n                        onTransitionEnd={this.handleTransitionEnd}\n                        renderHeader={this.renderHeader}\n                        renderScene={this.renderScene}\n                        state={state}\n                        descriptors={descriptors}\n                        onGestureStart={this.handleGestureStart}\n                        onGestureEnd={this.handleGestureEnd}\n                        onGestureCancel={this.handleGestureCancel}\n                        {...rest}\n                      />\n                    )}\n                  </HeaderShownContext.Consumer>\n                )}\n              </ModalPresentationContext.Consumer>\n            )}\n          </SafeAreaInsetsContext.Consumer>\n        </SafeAreaProviderCompat>\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}