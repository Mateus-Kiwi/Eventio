{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{getHeaderTitle,HeaderBackContext,HeaderHeightContext,HeaderShownContext}from'@react-navigation/elements';import{useTheme}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import ModalPresentationContext from\"../../utils/ModalPresentationContext\";import useKeyboardManager from\"../../utils/useKeyboardManager\";import Card from\"./Card\";var EPSILON=0.1;function CardContainer(_ref){var interpolationIndex=_ref.interpolationIndex,index=_ref.index,active=_ref.active,closing=_ref.closing,gesture=_ref.gesture,focused=_ref.focused,modal=_ref.modal,getPreviousScene=_ref.getPreviousScene,getFocusedRoute=_ref.getFocusedRoute,headerDarkContent=_ref.headerDarkContent,hasAbsoluteFloatHeader=_ref.hasAbsoluteFloatHeader,headerHeight=_ref.headerHeight,onHeaderHeightChange=_ref.onHeaderHeightChange,isParentHeaderShown=_ref.isParentHeaderShown,isNextScreenTransparent=_ref.isNextScreenTransparent,detachCurrentScreen=_ref.detachCurrentScreen,layout=_ref.layout,onCloseRoute=_ref.onCloseRoute,onOpenRoute=_ref.onOpenRoute,onGestureCancel=_ref.onGestureCancel,onGestureEnd=_ref.onGestureEnd,onGestureStart=_ref.onGestureStart,onTransitionEnd=_ref.onTransitionEnd,onTransitionStart=_ref.onTransitionStart,renderHeader=_ref.renderHeader,renderScene=_ref.renderScene,safeAreaInsetBottom=_ref.safeAreaInsetBottom,safeAreaInsetLeft=_ref.safeAreaInsetLeft,safeAreaInsetRight=_ref.safeAreaInsetRight,safeAreaInsetTop=_ref.safeAreaInsetTop,scene=_ref.scene;var parentHeaderHeight=React.useContext(HeaderHeightContext);var _useKeyboardManager=useKeyboardManager(React.useCallback(function(){var _scene$descriptor=scene.descriptor,options=_scene$descriptor.options,navigation=_scene$descriptor.navigation;return navigation.isFocused()&&options.keyboardHandlingEnabled!==false;},[scene.descriptor])),onPageChangeStart=_useKeyboardManager.onPageChangeStart,onPageChangeCancel=_useKeyboardManager.onPageChangeCancel,onPageChangeConfirm=_useKeyboardManager.onPageChangeConfirm;var handleOpen=function handleOpen(){var route=scene.descriptor.route;onTransitionEnd({route:route},false);onOpenRoute({route:route});};var handleClose=function handleClose(){var route=scene.descriptor.route;onTransitionEnd({route:route},true);onCloseRoute({route:route});};var handleGestureBegin=function handleGestureBegin(){var route=scene.descriptor.route;onPageChangeStart();onGestureStart({route:route});};var handleGestureCanceled=function handleGestureCanceled(){var route=scene.descriptor.route;onPageChangeCancel();onGestureCancel({route:route});};var handleGestureEnd=function handleGestureEnd(){var route=scene.descriptor.route;onGestureEnd({route:route});};var handleTransition=function handleTransition(_ref2){var closing=_ref2.closing,gesture=_ref2.gesture;var route=scene.descriptor.route;if(!gesture){onPageChangeConfirm===null||onPageChangeConfirm===void 0?void 0:onPageChangeConfirm(true);}else if(active&&closing){onPageChangeConfirm===null||onPageChangeConfirm===void 0?void 0:onPageChangeConfirm(false);}else{onPageChangeCancel===null||onPageChangeCancel===void 0?void 0:onPageChangeCancel();}onTransitionStart===null||onTransitionStart===void 0?void 0:onTransitionStart({route:route},closing);};var insets={top:safeAreaInsetTop,right:safeAreaInsetRight,bottom:safeAreaInsetBottom,left:safeAreaInsetLeft};var _useTheme=useTheme(),colors=_useTheme.colors;var _React$useState=React.useState('box-none'),_React$useState2=_slicedToArray(_React$useState,2),pointerEvents=_React$useState2[0],setPointerEvents=_React$useState2[1];React.useEffect(function(){var _scene$progress$next,_scene$progress$next$;var listener=(_scene$progress$next=scene.progress.next)===null||_scene$progress$next===void 0?void 0:(_scene$progress$next$=_scene$progress$next.addListener)===null||_scene$progress$next$===void 0?void 0:_scene$progress$next$.call(_scene$progress$next,function(_ref3){var value=_ref3.value;setPointerEvents(value<=EPSILON?'box-none':'none');});return function(){if(listener){var _scene$progress$next2,_scene$progress$next3;(_scene$progress$next2=scene.progress.next)===null||_scene$progress$next2===void 0?void 0:(_scene$progress$next3=_scene$progress$next2.removeListener)===null||_scene$progress$next3===void 0?void 0:_scene$progress$next3.call(_scene$progress$next2,listener);}};},[pointerEvents,scene.progress.next]);var _scene$descriptor$opt=scene.descriptor.options,presentation=_scene$descriptor$opt.presentation,animationEnabled=_scene$descriptor$opt.animationEnabled,cardOverlay=_scene$descriptor$opt.cardOverlay,cardOverlayEnabled=_scene$descriptor$opt.cardOverlayEnabled,cardShadowEnabled=_scene$descriptor$opt.cardShadowEnabled,cardStyle=_scene$descriptor$opt.cardStyle,cardStyleInterpolator=_scene$descriptor$opt.cardStyleInterpolator,gestureDirection=_scene$descriptor$opt.gestureDirection,gestureEnabled=_scene$descriptor$opt.gestureEnabled,gestureResponseDistance=_scene$descriptor$opt.gestureResponseDistance,gestureVelocityImpact=_scene$descriptor$opt.gestureVelocityImpact,headerMode=_scene$descriptor$opt.headerMode,headerShown=_scene$descriptor$opt.headerShown,transitionSpec=_scene$descriptor$opt.transitionSpec;var previousScene=getPreviousScene({route:scene.descriptor.route});var backTitle;if(previousScene){var _previousScene$descri=previousScene.descriptor,options=_previousScene$descri.options,route=_previousScene$descri.route;backTitle=getHeaderTitle(options,route.name);}var headerBack=React.useMemo(function(){return backTitle!==undefined?{title:backTitle}:undefined;},[backTitle]);return React.createElement(Card,{interpolationIndex:interpolationIndex,gestureDirection:gestureDirection,layout:layout,insets:insets,gesture:gesture,current:scene.progress.current,next:scene.progress.next,closing:closing,onOpen:handleOpen,onClose:handleClose,overlay:cardOverlay,overlayEnabled:cardOverlayEnabled,shadowEnabled:cardShadowEnabled,onTransition:handleTransition,onGestureBegin:handleGestureBegin,onGestureCanceled:handleGestureCanceled,onGestureEnd:handleGestureEnd,gestureEnabled:index===0?false:gestureEnabled,gestureResponseDistance:gestureResponseDistance,gestureVelocityImpact:gestureVelocityImpact,transitionSpec:transitionSpec,styleInterpolator:cardStyleInterpolator,accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',pointerEvents:active?'box-none':pointerEvents,pageOverflowEnabled:headerMode!=='float'&&presentation!=='modal',headerDarkContent:headerDarkContent,containerStyle:hasAbsoluteFloatHeader&&headerMode!=='screen'?{marginTop:headerHeight}:null,contentStyle:[{backgroundColor:presentation==='transparentModal'?'transparent':colors.background},cardStyle],style:[{overflow:active?undefined:'hidden',display:animationEnabled===false&&isNextScreenTransparent===false&&detachCurrentScreen!==false&&!focused?'none':'flex'},StyleSheet.absoluteFill]},React.createElement(View,{style:styles.container},React.createElement(ModalPresentationContext.Provider,{value:modal},React.createElement(View,{style:styles.scene},React.createElement(HeaderBackContext.Provider,{value:headerBack},React.createElement(HeaderShownContext.Provider,{value:isParentHeaderShown||headerShown!==false},React.createElement(HeaderHeightContext.Provider,{value:headerShown?headerHeight:parentHeaderHeight!==null&&parentHeaderHeight!==void 0?parentHeaderHeight:0},renderScene({route:scene.descriptor.route}))))),headerMode!=='float'?renderHeader({mode:'screen',layout:layout,scenes:[previousScene,scene],getPreviousScene:getPreviousScene,getFocusedRoute:getFocusedRoute,onContentHeightChange:onHeaderHeightChange}):null)));}export default React.memo(CardContainer);var styles=StyleSheet.create({container:{flex:1,flexDirection:'column-reverse'},scene:{flex:1}});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","HeaderBackContext","HeaderHeightContext","HeaderShownContext","useTheme","React","ModalPresentationContext","useKeyboardManager","Card","EPSILON","CardContainer","interpolationIndex","index","active","closing","gesture","focused","modal","getPreviousScene","getFocusedRoute","headerDarkContent","hasAbsoluteFloatHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","isNextScreenTransparent","detachCurrentScreen","layout","onCloseRoute","onOpenRoute","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","parentHeaderHeight","useContext","useCallback","descriptor","options","navigation","isFocused","keyboardHandlingEnabled","onPageChangeStart","onPageChangeCancel","onPageChangeConfirm","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","insets","top","right","bottom","left","colors","useState","pointerEvents","setPointerEvents","useEffect","listener","progress","next","_scene$progress$next","addListener","_scene$progress$next$","value","removeListener","presentation","animationEnabled","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","headerMode","headerShown","transitionSpec","previousScene","backTitle","name","headerBack","useMemo","undefined","title","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onTransition","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","overflow","display","StyleSheet","absoluteFill","View","styles","container","Provider","mode","scenes","onContentHeightChange","memo","create","flex","flexDirection"],"sources":["CardContainer.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n} from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport type { Layout, Scene } from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport useKeyboardManager from '../../utils/useKeyboardManager';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\n\ntype Props = {\n  interpolationIndex: number;\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  modal: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  scene: Scene;\n  headerDarkContent: boolean | undefined;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  hasAbsoluteFloatHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n  isNextScreenTransparent: boolean;\n  detachCurrentScreen: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  interpolationIndex,\n  index,\n  active,\n  closing,\n  gesture,\n  focused,\n  modal,\n  getPreviousScene,\n  getFocusedRoute,\n  headerDarkContent,\n  hasAbsoluteFloatHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  isNextScreenTransparent,\n  detachCurrentScreen,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n}: Props) {\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const { onPageChangeStart, onPageChangeCancel, onPageChangeConfirm } =\n    useKeyboardManager(\n      React.useCallback(() => {\n        const { options, navigation } = scene.descriptor;\n\n        return (\n          navigation.isFocused() && options.keyboardHandlingEnabled !== false\n        );\n      }, [scene.descriptor])\n    );\n\n  const handleOpen = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, false);\n    onOpenRoute({ route });\n  };\n\n  const handleClose = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, true);\n    onCloseRoute({ route });\n  };\n\n  const handleGestureBegin = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeStart();\n    onGestureStart({ route });\n  };\n\n  const handleGestureCanceled = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeCancel();\n    onGestureCancel({ route });\n  };\n\n  const handleGestureEnd = () => {\n    const { route } = scene.descriptor;\n\n    onGestureEnd({ route });\n  };\n\n  const handleTransition = ({\n    closing,\n    gesture,\n  }: {\n    closing: boolean;\n    gesture: boolean;\n  }) => {\n    const { route } = scene.descriptor;\n\n    if (!gesture) {\n      onPageChangeConfirm?.(true);\n    } else if (active && closing) {\n      onPageChangeConfirm?.(false);\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] = React.useState<'box-none' | 'none'>(\n    'box-none'\n  );\n\n  React.useEffect(() => {\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const {\n    presentation,\n    animationEnabled,\n    cardOverlay,\n    cardOverlayEnabled,\n    cardShadowEnabled,\n    cardStyle,\n    cardStyleInterpolator,\n    gestureDirection,\n    gestureEnabled,\n    gestureResponseDistance,\n    gestureVelocityImpact,\n    headerMode,\n    headerShown,\n    transitionSpec,\n  } = scene.descriptor.options;\n\n  const previousScene = getPreviousScene({ route: scene.descriptor.route });\n\n  let backTitle: string | undefined;\n\n  if (previousScene) {\n    const { options, route } = previousScene.descriptor;\n\n    backTitle = getHeaderTitle(options, route.name);\n  }\n\n  const headerBack = React.useMemo(\n    () => (backTitle !== undefined ? { title: backTitle } : undefined),\n    [backTitle]\n  );\n\n  return (\n    <Card\n      interpolationIndex={interpolationIndex}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransition={handleTransition}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={index === 0 ? false : gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode !== 'float' && presentation !== 'modal'}\n      headerDarkContent={headerDarkContent}\n      containerStyle={\n        hasAbsoluteFloatHeader && headerMode !== 'screen'\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[\n        {\n          backgroundColor:\n            presentation === 'transparentModal'\n              ? 'transparent'\n              : colors.background,\n        },\n        cardStyle,\n      ]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n          display:\n            // Hide unfocused screens when animation isn't enabled\n            // This is also necessary for a11y on web\n            animationEnabled === false &&\n            isNextScreenTransparent === false &&\n            detachCurrentScreen !== false &&\n            !focused\n              ? 'none'\n              : 'flex',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <ModalPresentationContext.Provider value={modal}>\n          <View style={styles.scene}>\n            <HeaderBackContext.Provider value={headerBack}>\n              <HeaderShownContext.Provider\n                value={isParentHeaderShown || headerShown !== false}\n              >\n                <HeaderHeightContext.Provider\n                  value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n                >\n                  {renderScene({ route: scene.descriptor.route })}\n                </HeaderHeightContext.Provider>\n              </HeaderShownContext.Provider>\n            </HeaderBackContext.Provider>\n          </View>\n          {headerMode !== 'float'\n            ? renderHeader({\n                mode: 'screen',\n                layout,\n                scenes: [previousScene, scene],\n                getPreviousScene,\n                getFocusedRoute,\n                onContentHeightChange: onHeaderHeightChange,\n              })\n            : null}\n        </ModalPresentationContext.Provider>\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}