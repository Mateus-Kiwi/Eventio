{"ast":null,"code":"export default function debounce(func,duration){var timeout;return function(){if(!timeout){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}func.apply(this,args);timeout=setTimeout(function(){timeout=undefined;},duration);}};}","map":{"version":3,"mappings":"AAAA,cAAe,SAASA,SAAT,CACbC,IADa,CAEbC,QAFa,CAGV,CACH,GAAIC,QAAJ,CAEA,MAAO,WAA8B,CACnC,GAAI,CAACA,OAAL,CAAc,+BADeC,IACf,0CADeA,IACf,MADeA,CACfC,eADeD,CACf,CAEZH,IAAI,CAACK,KAALL,CAAW,IAAXA,CAAiBG,IAAjBH,EAEAE,OAAO,CAAGI,UAAU,CAAC,UAAM,CACzBJ,OAAO,CAAGK,SAAVL,CADkB,EAEjBD,QAFiB,CAApBC,CAGD,CARH,EAUD","names":["debounce","func","duration","timeout","args","arguments","apply","setTimeout","undefined"],"sources":["debounce.tsx"],"sourcesContent":["export default function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  duration: number\n): T {\n  let timeout: NodeJS.Timeout | number | undefined;\n\n  return function (this: any, ...args) {\n    if (!timeout) {\n      // eslint-disable-next-line babel/no-invalid-this\n      func.apply(this, args);\n\n      timeout = setTimeout(() => {\n        timeout = undefined;\n      }, duration);\n    }\n  } as T;\n}\n"]},"metadata":{},"sourceType":"module"}